Finding the max no of possibilities to pick the coins that sums up to the given sum.

from typing import List

def max_coin_change(coin: List[int], sum: int, n: int) -> int:
    dp = [[0 for x in range(sum + 1)] for x in range(n + 1)]
    for i in range(n+1):
        for j in range(sum+1):
            #print("i : ",i, "j :", j, "  wt[i-1]",wt[i-1])
            if(j==0):
                dp[i][j]=1
            elif(i==0):
                dp[i][j]=0
            elif(coin[i-1]<=j):
                dp[i][j] = (dp[i][j-coin[i-1]]+dp[i-1][j])
            else:
                dp[i][j] = dp[i-1][j]
    return dp[n][sum]
sum = 6
coin = [1,2,3]
n = len(coin)
print(max_coin_change(coin, sum,n))