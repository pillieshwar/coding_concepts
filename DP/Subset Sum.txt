Sub-Set Sum Problem : In a given array does there exist a subset where the sum of those numbers is equal to the given weight.

from typing import List

def subset(arr: List[int], sum: int, n: int) -> bool:
    dp = [[0 for x in range(sum + 1)] for x in range(n + 1)]    
    for i in range(n+1):
        for j in range(sum+1):
            if(j==0):
                dp[i][j] = True
            elif(i==0):
                dp[i][j] = False
            elif(arr[i-1]<=j):
                dp[i][j] = ((dp[i-1][j-arr[i-1]]) or (dp[i-1][j]))
            else:
                dp[i][j] = dp[i-1][j]
    print(dp[n][sum])

arr = [2,3,7,8,10]
sum = 11
n=len(arr)
subset(arr,sum,n)